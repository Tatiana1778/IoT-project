#include <rgb_lcd.h>
#include <Wire.h>
rgb_lcd lcd;

const int ledPin_1 = 7; 
const int ledPin_2 = 6; 
const int buzzer = 4;
const int colorR = 0;
const int colorG = 255;
const int colorB = 255;
const int touch_sensor = 5;
// constants won't change. They're used here to set pin numbers:
const int SENSOR_PIN = 5;       // the Arduino's input pin that connects to the sensor's SIGNAL pin 
// Variables will change:
int lastState = LOW;  // the previous state from the input pin
int currentState;     // the current reading from the input pin

void setup() {
    // set up the LCD's number of columns and rows:
    lcd.begin(16, 1);
    lcd.setRGB(colorR, colorG, colorB);
    lcd.print("Start");
   // initialize ledPin as an output.
    pinMode(ledPin_1, OUTPUT);
    pinMode(ledPin_2, OUTPUT);
    pinMode(buzzer,OUTPUT);//initialize the buzzer pin as an output
    pinMode(touch_sensor, INPUT);
    // initialize serial communication at 9600 bits per second:
    Serial.begin(9600);
    // initialize the Arduino's pin as aninput
    pinMode(SENSOR_PIN, INPUT);
}

void loop() {
    // read the state of the the input pin:
  currentState = digitalRead(SENSOR_PIN);
  if(lastState == LOW && currentState == HIGH) {
    lcd.clear();
    Serial.println("The sensor is touched");
    lcd.print("Occupant");
    digitalWrite(ledPin_2, LOW);
    digitalWrite(ledPin_1, HIGH);
    noTone(buzzer);
    lcd.setRGB(255,0,0);}
  else if(lastState == HIGH && currentState == LOW) {
    lcd.clear();
    Serial.println("The sensor is released");
    lcd.print("Vacant");
    tone(buzzer, 500, 500);
    digitalWrite(ledPin_1, LOW);
    digitalWrite(ledPin_2, HIGH);
    lcd.setRGB(0,255,0);}
  // save the the last state
  lastState = currentState;
}
